//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "viewer_ticket")]
pub struct Model {
    pub viewer_viewer_id: i32,
    pub ticket_ticket_id: i32,
    pub bought_date: Option<Date>,
    #[sea_orm(primary_key)]
    pub vi_ti_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::ticket::Entity",
        from = "Column::TicketTicketId",
        to = "super::ticket::Column::TicketId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Ticket,
    #[sea_orm(
        belongs_to = "super::viewer::Entity",
        from = "Column::ViewerViewerId",
        to = "super::viewer::Column::ViewerId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Viewer,
}

impl Related<super::ticket::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Ticket.def()
    }
}

impl Related<super::viewer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Viewer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
